/*
 * This file is generated by jOOQ.
 */
package neacron_2fjooq.tables.records;


import java.time.LocalDateTime;

import neacron_2fjooq.tables.Logs;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogsRecord extends UpdatableRecordImpl<LogsRecord> implements Record7<Long, LocalDateTime, String, String, String, Integer, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.logs.id</code>.
     */
    public LogsRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.logs.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.logs.created_at</code>.
     */
    public LogsRecord setCreatedAt(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>public.logs.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.logs.language</code>.
     */
    public LogsRecord setLanguage(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>public.logs.language</code>.
     */
    public String getLanguage() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.logs.protocol</code>.
     */
    public LogsRecord setProtocol(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.logs.protocol</code>.
     */
    public String getProtocol() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.logs.request</code>.
     */
    public LogsRecord setRequest(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>public.logs.request</code>.
     */
    public String getRequest() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.logs.status_code</code>.
     */
    public LogsRecord setStatusCode(Integer value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>public.logs.status_code</code>.
     */
    public Integer getStatusCode() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>public.logs.user_principal</code>.
     */
    public LogsRecord setUserPrincipal(String value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>public.logs.user_principal</code>.
     */
    public String getUserPrincipal() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, LocalDateTime, String, String, String, Integer, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, LocalDateTime, String, String, String, Integer, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Logs.LOGS.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Logs.LOGS.CREATED_AT;
    }

    @Override
    public Field<String> field3() {
        return Logs.LOGS.LANGUAGE;
    }

    @Override
    public Field<String> field4() {
        return Logs.LOGS.PROTOCOL;
    }

    @Override
    public Field<String> field5() {
        return Logs.LOGS.REQUEST;
    }

    @Override
    public Field<Integer> field6() {
        return Logs.LOGS.STATUS_CODE;
    }

    @Override
    public Field<String> field7() {
        return Logs.LOGS.USER_PRINCIPAL;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getCreatedAt();
    }

    @Override
    public String component3() {
        return getLanguage();
    }

    @Override
    public String component4() {
        return getProtocol();
    }

    @Override
    public String component5() {
        return getRequest();
    }

    @Override
    public Integer component6() {
        return getStatusCode();
    }

    @Override
    public String component7() {
        return getUserPrincipal();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getCreatedAt();
    }

    @Override
    public String value3() {
        return getLanguage();
    }

    @Override
    public String value4() {
        return getProtocol();
    }

    @Override
    public String value5() {
        return getRequest();
    }

    @Override
    public Integer value6() {
        return getStatusCode();
    }

    @Override
    public String value7() {
        return getUserPrincipal();
    }

    @Override
    public LogsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public LogsRecord value2(LocalDateTime value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public LogsRecord value3(String value) {
        setLanguage(value);
        return this;
    }

    @Override
    public LogsRecord value4(String value) {
        setProtocol(value);
        return this;
    }

    @Override
    public LogsRecord value5(String value) {
        setRequest(value);
        return this;
    }

    @Override
    public LogsRecord value6(Integer value) {
        setStatusCode(value);
        return this;
    }

    @Override
    public LogsRecord value7(String value) {
        setUserPrincipal(value);
        return this;
    }

    @Override
    public LogsRecord values(Long value1, LocalDateTime value2, String value3, String value4, String value5, Integer value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LogsRecord
     */
    public LogsRecord() {
        super(Logs.LOGS);
    }

    /**
     * Create a detached, initialised LogsRecord
     */
    public LogsRecord(Long id, LocalDateTime createdAt, String language, String protocol, String request, Integer statusCode, String userPrincipal) {
        super(Logs.LOGS);

        setId(id);
        setCreatedAt(createdAt);
        setLanguage(language);
        setProtocol(protocol);
        setRequest(request);
        setStatusCode(statusCode);
        setUserPrincipal(userPrincipal);
    }

    /**
     * Create a detached, initialised LogsRecord
     */
    public LogsRecord(neacron_2fjooq.tables.pojos.Logs value) {
        super(Logs.LOGS);

        if (value != null) {
            setId(value.getId());
            setCreatedAt(value.getCreatedAt());
            setLanguage(value.getLanguage());
            setProtocol(value.getProtocol());
            setRequest(value.getRequest());
            setStatusCode(value.getStatusCode());
            setUserPrincipal(value.getUserPrincipal());
        }
    }
}
