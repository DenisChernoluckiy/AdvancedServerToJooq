/*
 * This file is generated by jOOQ.
 */
package neacron_2fjooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Logs implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private LocalDateTime createdAt;
    private String language;
    private String protocol;
    private String request;
    private Integer statusCode;
    private String userPrincipal;

    public Logs() {}

    public Logs(Logs value) {
        this.id = value.id;
        this.createdAt = value.createdAt;
        this.language = value.language;
        this.protocol = value.protocol;
        this.request = value.request;
        this.statusCode = value.statusCode;
        this.userPrincipal = value.userPrincipal;
    }

    public Logs(
        Long id,
        LocalDateTime createdAt,
        String language,
        String protocol,
        String request,
        Integer statusCode,
        String userPrincipal
    ) {
        this.id = id;
        this.createdAt = createdAt;
        this.language = language;
        this.protocol = protocol;
        this.request = request;
        this.statusCode = statusCode;
        this.userPrincipal = userPrincipal;
    }

    /**
     * Getter for <code>public.logs.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.logs.id</code>.
     */
    public Logs setId(Long id) {
        this.id = id;
        return this;
    }

    /**
     * Getter for <code>public.logs.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Setter for <code>public.logs.created_at</code>.
     */
    public Logs setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * Getter for <code>public.logs.language</code>.
     */
    public String getLanguage() {
        return this.language;
    }

    /**
     * Setter for <code>public.logs.language</code>.
     */
    public Logs setLanguage(String language) {
        this.language = language;
        return this;
    }

    /**
     * Getter for <code>public.logs.protocol</code>.
     */
    public String getProtocol() {
        return this.protocol;
    }

    /**
     * Setter for <code>public.logs.protocol</code>.
     */
    public Logs setProtocol(String protocol) {
        this.protocol = protocol;
        return this;
    }

    /**
     * Getter for <code>public.logs.request</code>.
     */
    public String getRequest() {
        return this.request;
    }

    /**
     * Setter for <code>public.logs.request</code>.
     */
    public Logs setRequest(String request) {
        this.request = request;
        return this;
    }

    /**
     * Getter for <code>public.logs.status_code</code>.
     */
    public Integer getStatusCode() {
        return this.statusCode;
    }

    /**
     * Setter for <code>public.logs.status_code</code>.
     */
    public Logs setStatusCode(Integer statusCode) {
        this.statusCode = statusCode;
        return this;
    }

    /**
     * Getter for <code>public.logs.user_principal</code>.
     */
    public String getUserPrincipal() {
        return this.userPrincipal;
    }

    /**
     * Setter for <code>public.logs.user_principal</code>.
     */
    public Logs setUserPrincipal(String userPrincipal) {
        this.userPrincipal = userPrincipal;
        return this;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Logs other = (Logs) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.createdAt == null) {
            if (other.createdAt != null)
                return false;
        }
        else if (!this.createdAt.equals(other.createdAt))
            return false;
        if (this.language == null) {
            if (other.language != null)
                return false;
        }
        else if (!this.language.equals(other.language))
            return false;
        if (this.protocol == null) {
            if (other.protocol != null)
                return false;
        }
        else if (!this.protocol.equals(other.protocol))
            return false;
        if (this.request == null) {
            if (other.request != null)
                return false;
        }
        else if (!this.request.equals(other.request))
            return false;
        if (this.statusCode == null) {
            if (other.statusCode != null)
                return false;
        }
        else if (!this.statusCode.equals(other.statusCode))
            return false;
        if (this.userPrincipal == null) {
            if (other.userPrincipal != null)
                return false;
        }
        else if (!this.userPrincipal.equals(other.userPrincipal))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.createdAt == null) ? 0 : this.createdAt.hashCode());
        result = prime * result + ((this.language == null) ? 0 : this.language.hashCode());
        result = prime * result + ((this.protocol == null) ? 0 : this.protocol.hashCode());
        result = prime * result + ((this.request == null) ? 0 : this.request.hashCode());
        result = prime * result + ((this.statusCode == null) ? 0 : this.statusCode.hashCode());
        result = prime * result + ((this.userPrincipal == null) ? 0 : this.userPrincipal.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Logs (");

        sb.append(id);
        sb.append(", ").append(createdAt);
        sb.append(", ").append(language);
        sb.append(", ").append(protocol);
        sb.append(", ").append(request);
        sb.append(", ").append(statusCode);
        sb.append(", ").append(userPrincipal);

        sb.append(")");
        return sb.toString();
    }
}
